# description of this workflow, can be anything you want
name: Package and release

# we need to let GitHub know _when_ we want to release, typically only when we create a new tag.
# this will target only tags, and not all pushes to the master branch.
# this part can be heavily customized to your liking, like targeting only tags that match a certain word,
# other branches or even pullrequests.
on:
  push:
    tags:
      - "*"
      - "!**-alpha**"
      - "!**-beta**"

# a workflow is built up as jobs, and within these jobs are steps
jobs:


  # "release" is a job, you can name it anything you want
  release:

    # we can run our steps on pretty much anything, but the "ubuntu-latest" image is a safe bet
    runs-on: ubuntu-latest
    if: github.repository == 'Jods-GH/DungeonAuraTools'

    # specify the environment variables used by the packager, matching the secrets from the project on GitHub
    env:
      MESSAGE: "DungeonAuraTools: New Release Published"
      CF_API_KEY: ${{ secrets.CF_API_KEY }}
      WOWI_API_TOKEN: ${{ secrets.WOWI_API_TOKEN }}
      WAGO_API_TOKEN: ${{ secrets.WAGO_API_TOKEN }}
      GITHUB_OAUTH: ${{ secrets.GITHUB_TOKEN }}  # "GITHUB_TOKEN" is a secret always provided to the workflow
                                                 # for your own token, the name cannot start with "GITHUB_"

    # "steps" holds a list of all the steps needed to package and release our AddOn
    steps:
      #update localisation
      - name: HTTP Request Action
        uses: fjogeleit/http-request-action@v1.14.0
        with:
          url: 'https://wow.curseforge.com/api/projects/662863/localization/import'
          method: 'POST'
          token: CF_API_KEY
          customHeaders: '{"Content-Type": "application/json"}'
          data: '{metadata:{language: "enUS",}, localizations: Locales/enUS.lua }'

      # we first have to clone the AddOn project, this is a required step
      - name: Clone project
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # gets git history for changelogs
          
      - name: Generate Changelog
        id: Changelog
        run: .github/generate_changelog.sh
        
      - name: save changelog in variable
        uses: pCYSl5EDgo/cat@master
        id: readChanglog
        with:
          path: CHANGELOG.md  
      # once cloned, we just run the GitHub Action for the packager project
      - name: Package and release
        uses: BigWigsMods/packager@v2
    #using Discord webhook to send release information
      - name: Discord Webhook Action
        uses: tsickert/discord-webhook@v5.3.0
        if: success()
        with:
          webhook-url: ${{ secrets.WEBHOOK_URL }}
          embed-title: ${{ env.MESSAGE }}
          embed-url: https://github.com/Jodsderechte/DungeonAuraTools/releases/latest
          embed-description:  ${{ steps.readChanglog.outputs.text }}
      
