# description of this workflow, can be anything you want
name: alpha build

# we need to let GitHub know _when_ we want to release, typically only when we create a new tag.
# this will target only tags, and not all pushes to the master branch.
# this part can be heavily customized to your liking, like targeting only tags that match a certain word,
# other branches or even pullrequests.
on:
  push:
    branches:
      - "**"
    paths-ignore:
      - '.github/**' 
    tags-ignore:
      - "v.**"
      - "**-beta"
      - "**--alpha"

# a workflow is built up as jobs, and within these jobs are steps
jobs:

  # "release" is a job, you can name it anything you want
  #setup:
    
  #  if: github.repository == 'Jods-GH/DungeonAuraTools'
    # we can run our steps on pretty much anything, but the "ubuntu-latest" image is a safe bet
  #  runs-on: ubuntu-latest

    # specify the environment variables used by the packager, matching the secrets from the project on GitHub
  #  env:
  #    CF_API_KEY: ${{ secrets.CF_API_KEY }}
   #   WAGO_API_TOKEN: ${{ secrets.WAGO_API_TOKEN }}
   #   GITHUB_OAUTH: ${{ secrets.GITHUB_TOKEN }}  # "GITHUB_TOKEN" is a secret always provided to the workflow
                                                 # for your own token, the name cannot start with "GITHUB_"

    # "steps" holds a list of all the steps needed to package and release our AddOn
   # steps:

      # we first have to clone the AddOn project, this is a required step
    #  - name: Clone project
     #   uses: actions/checkout@v4
     #   with:
    #      fetch-depth: 0  # gets git history for changelogs
    #      ref: ${{ github.ref }}

   #   - name: Get commit hash
     #   id: vars
   #     run: echo "::set-output name=commit_hash::$(git rev-parse --short HEAD)"

  #    - name: Create and push tag for main
  #      if: github.ref == 'refs/heads/main'
  #      run: |
 #         git tag "${{ steps.vars.outputs.commit_hash }}-beta"
 #         git push origin "${{ steps.vars.outputs.commit_hash }}-beta"

#      - name: Create and push tag for other branches
 #       if: github.ref != 'refs/heads/main'
#        run: |
 #         git tag "${{ steps.vars.outputs.commit_hash }}-alpha" 
 #         git push origin "${{ steps.vars.outputs.commit_hash }}-alpha"
  release:
  #  needs: setup
    if: github.repository == 'Jods-GH/DungeonAuraTools'
    # we can run our steps on pretty much anything, but the "ubuntu-latest" image is a safe bet
    runs-on: ubuntu-latest

    # specify the environment variables used by the packager, matching the secrets from the project on GitHub
    env:
      CF_API_KEY: ${{ secrets.CF_API_KEY }}
      WAGO_API_TOKEN: ${{ secrets.WAGO_API_TOKEN }}
      GITHUB_OAUTH: ${{ secrets.GITHUB_TOKEN }}  # "GITHUB_TOKEN" is a secret always provided to the workflow
                                                 # for your own token, the name cannot start with "GITHUB_"

    # "steps" holds a list of all the steps needed to package and release our AddOn
    steps:
      - name: Clone project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # gets git history for changelogs
          ref: ${{ github.ref }}
          
      - name: Generate Changelog
        id: Changelog
        run: .github/generate_changelog.sh
        
      - name: save changelog in variable
        uses: pCYSl5EDgo/cat@master
        id: readChanglog
        with:
          path: CHANGELOG.md           
      # once cloned, we just run the GitHub Action for the packager project
      - name: Package and release
        uses: BigWigsMods/packager@v2
